// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func body() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body><div x-data=\"{\n        query: &#39;&#39;,\n        search_complete: false,\n        search_results: [],\n        search() {\n          if (this.query.length === 0) return;\n          htmx.ajax(\n            &#39;GET&#39;, \n            &#39;/api/&#39; + document.querySelector(&#39;[x-data] input[type=text]&#39;).value, \n            target = &#39;#temp_search_results&#39;,\n          );\n          this.search_complete = true;\n        },\n      }\"><input x-model=\"query\" type=\"text\" placeholder=\"Search...\"> <button @click=\"search()\">Search</button> <button @click=\"query = &#39;&#39;, search_complete = false\">Clear</button><div id=\"search_results_container\" x-show=\"search_complete\"><div id=\"temp_search_results\"></div></div><p x-show=\"!search_complete\">Search for something...</p></div><script>\n\t\t  htmx.on('htmx:afterRequest', function(event) { \n\t\t    query = document.querySelector('[x-data] input[type=text]').value;\n\t\t    if (event.detail.pathInfo.requestPath !== '/api/' + query) return;\n        var jsonResponse = JSON.parse(event.detail.xhr.response);\n        var formattedHtml = jsonResponse.map(function(item) {\n          return '<div> <p id=\"search_results\">' + \"Name: \" + item.name + '</p> </div>';\n        }).join('');\n        document.getElementById('temp_search_results').innerHTML = formattedHtml;\n\t\t  });\n\t\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = bodyStyles().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
